/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 scene.gltf --shadows
*/

import React, { useEffect, useRef, useState } from 'react';
import { useGLTF, useScroll } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

export function Scene(props) {
  const { nodes, materials } = useGLTF('/model/iphone14/scene.gltf');
  const { propx, propy, propz, turned, direction } = props;
  const data = useScroll();
  const [x, setX] = useState(propx);
  const [y, setY] = useState(propy);
  const [z, setZ] = useState(propz);
  const phoneref = useRef();

  useEffect(() => {
    if (!turned) {
      return;
    }
    phoneref.current.rotation.y = 3.15;
  }, []);

  useFrame(() => {
    const translate = data.range(1 / 3, 1 / 3);
    if (translate < 0.9) {
      direction === 'right'
        ? ((phoneref.current.position.x = -data.offset / 2 + propx),
          (phoneref.current.rotation.y = -data.offset * 10 + 3.15))
        : ((phoneref.current.position.x = data.offset / 2 + propx),
          (phoneref.current.rotation.y = data.offset * 10));
    }
  });

  return (
    <group {...props} dispose={null} position={[x, y, z]} ref={phoneref}>
      <group scale={0.01}>
        <group scale={40}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Frame_Frame_0.geometry}
            material={materials.Frame}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Frame_Frame2_0.geometry}
            material={materials.Frame2}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Frame_Port_0.geometry}
            material={materials.Port}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Frame_Antenna_0.geometry}
            material={materials.Antenna}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Frame_Mic_0.geometry}
            material={materials.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Body_Mic_0.geometry}
            material={materials.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Body_Bezel_0.geometry}
            material={materials.Bezel}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Body_Body_0.geometry}
            material={materials.Body}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Body_Wallpaper_0.geometry}
            material={materials.Wallpaper}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Body_Camera_Glass_0.geometry}
            material={materials.Camera_Glass}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Body_Lens_0.geometry}
            material={materials.Lens}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Body_Material_0.geometry}
            material={materials.Material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Camera_Body_0.geometry}
            material={materials.Body}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Camera_Glass_0.geometry}
            material={materials.Glass}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Camera_Camera_Frame001_0.geometry}
            material={materials['Camera_Frame.001']}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Camera_Mic_0.geometry}
            material={materials.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Body001_Screen_Glass_0.geometry}
            material={materials.Screen_Glass}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Button_Frame_0.geometry}
            material={materials.Frame}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Circle003_Frame_0.geometry}
            material={materials.Frame}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Apple_Logo_Logo_0.geometry}
            material={materials.Logo}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Camera001_Body_0.geometry}
            material={materials.Body}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Camera001_Gray_Glass_0.geometry}
            material={materials.Gray_Glass}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Camera001_Flash_0.geometry}
            material={materials.Flash}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Camera001_Port_0.geometry}
            material={materials.Port}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Camera001_Camera_Frame_0.geometry}
            material={materials.Camera_Frame}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Camera001_Camera_Glass_0.geometry}
            material={materials.Camera_Glass}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Camera001_Lens_0.geometry}
            material={materials.Lens}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Camera001_Black_Glass_0.geometry}
            material={materials.Black_Glass}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Camera003_Material002_0.geometry}
            material={materials['Material.002']}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/model/iphone14/scene.gltf');
